#!perl -nl

my %chars = (
	'<' => 's>^><>',
	'>' => 's<^>^>^',
	'^' => 's>^>^>',
	'e' => 's>^>e>',
	's' => 's>^>s>',
	'0' => 's>^>e<<e>e',
	'1' => 's>^>s^^^>e',
	';' => 's<^><e^<^>>e',

	# 'v' => 's<^><<^<<^>>>^<^^^^e>^<e^^es>^<^ee^^>^<^<^^^>>^<^<>^^>^<^^^^^e>^<^^^^^^>>ee',
	'v' => 's<^><<^<^>>^<eee^>^<^^^s>^<^^^e>>ee',
);

# $_ .= 's<^><<^<<^^<>^<><<<^<>^>>^^><>^^^^e>>>^<^^^^^^<^^^^^^^^<>^^^^^^^>'
# . '^^^^>^<^^^^^^^^^^^^^^^^^^^^^^^^^eee>^<^^^^^^^^^^^^^^^^^^^^^^^^>^<^^^^^^^^^^^^^^^^^^^^^^^^>^<^^^^^^^^^^^^^^^^^^^^^'
# . 'se>^<^^^^^^^^^^^^^^^^^^^ee^>^<^^^^^^^^^^^^^^^^^^^ss>^<^^^^^^^^^^^^^^^^^^^^>^<^^^^^^^^^^^^^^^^^^s'
# . '>^<^^^^^^^^^^^^^^^^^^>^<^^^^^^^^^^^^^^^^^s>^<^^^^^^^^^^^^^^^^^>^<^^^^^^^^^^^^^^^^e'
# . '>^<^^^^^^^^^^^^^^^^>^<^^^^^^^^^^^^^^^^>^<^^^^^^^e^^^^^^^>^<^^^^^^^se^^e^>^<e^^es^^^s'
# . '^^s>^<^ee^>^<^<^^^^^^^^^^^^^^^^^^^^^^^^^^^>>^<^<>^^^^^^^^^^^^^^^^^^^^^^^^^^>^<^^^^^^^^^^^^^^^^^^^^^^^^^^^^^'
# . 'e>^<^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^>^<^<^^^^^^^^^^^^^^^^^^^^^^^^^^^^>>^<^<>^^^^^^^^^^^^^^^^^^^^^^^^^^^>^<^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^'
# . 'e>^<^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^>>ee';

my $magic = '<^<<^^<>>^<^><<<^<>^>>^^><>>ee>^<^^^^^^^<^>^^^^^^^<>^^^^^^^>^<^^^^^^^^^^^^^^^^^^^^^^^^^^>'
	. '^<^^^^^^^^^^^^^^^^^^^^^^^se>^<^^^^^^^^^^^^^^^^^^^^^ee^>^<^^^^^^^^^^^^^^^^^^^^^ss>^<^^^^^^^^^^^^^^^^^^^^^^>'
	. '^<^^^^^^^^^^^^^^^^^^^^s>^<^^^^^^^^^^^^^^^^^^^^>^<^^^^^^^^^^^^^^^^^^^s>^<^^^^^^^^^^^^^^^^^^^>'
	. '^<^^^^^^^^^^^^^^^^^^e>^<^^^^^^^^^^^^^^^^^^>^<^^^^^^^^^^^^^^^^^^>^<^^^^^^^^e^e^^^^^^>'
	. '^<^^^^^^e^s^s^^e^>^<^^^^^^s^^^^^^s>^<^^^^^^^>^<e^^es^>^<^ee^>';

$" = '^'; #"

sub num {
	my $b = unpack "b8";
	my @r;
	push @r, 's^^^' . '<<s^^^' x $-[0] while $b =~ /1/g;
	return "s>^>@r>e";
}

my $original = $_;

@_ = map { $chars{$_} || (num, $chars{v}, "s<^><$magic>e") } reverse /./g;

$a = "@_^print\$_";
print $a;
undef $_;
eval($a);
die $@ if $@;
die "$_ ne $original" if $_ ne $original;
